Index: SOURCE/hasher-priv.8.prebuild
===================================================================
--- /dev/null
+++ SOURCE/hasher-priv.8.prebuild
@@ -0,0 +1,202 @@
+.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
+.TH \FBHASHER-PRIV\FR "8" "April 2015" "\fBhasher-priv\fR version 1.5.0" "System Administration Utilities"
+.SH NAME
+\fBhasher-priv\fR \- privileged helper for the hasher project
+.SH SYNOPSIS
+.B hasher-priv
+[\fI\,options\/\fR] \fI\,<args>\/\fR
+.SH DESCRIPTION
+Privileged helper for the hasher project.
+.SS "Valid options are:"
+.HP
+\-<number>:
+.IP
+subconfig identifier;
+.HP
+\fB\-\-version\fR:
+.IP
+print program version and exit.
+.HP
+\fB\-h\fR or \fB\-\-help\fR:
+.IP
+print this help text and exit.
+.PP
+Valid args are any of:
+.SS "getconf:"
+.IP
+print config file name;
+.SS "killuid:"
+.IP
+kill all processes of user1 and user2;
+.SS "getugid1:"
+.IP
+print uid:gid pair for user1;
+.SS "chrootuid1 <chroot path> <program> [program args]:"
+.IP
+execute program in given chroot with credentials of user1;
+.SS "getugid2:"
+.IP
+print uid:gid pair for user2;
+.SS "chrootuid2 <chroot path> <program> [program args]:"
+.IP
+execute program in given chroot with credentials of user2;
+.SS "makedev <chroot path>:"
+.IP
+make essential devices in given chroot;
+.SS "maketty <chroot path>:"
+.IP
+make tty devices in given chroot;
+.SS "makeconsole <chroot path>:"
+.IP
+make console devices in given chroot;
+.SS "mount <chroot path> <mount point>:"
+.IP
+mount appropriate file system to the given mount point;
+.SS "umount <chroot path>:"
+.IP
+umount all previously mounted file systems.
+.SH SECURITY
+Following operation modes are not security sensitive:
+.TP
+.BR getugid1 ", " getugid2
+Query pseudouser identifiers.
+.PP
+Following operation modes have minimal security implications:
+.TP
+.B killuid
+Kill all processes running by pseudousers.
+.TP
+.BR chrootuid1 ", " chrootuid2
+Execute program in build chroot with credentials of pseudouser.
+When
+.B share_mount
+is not enabled, this operation is more security sensitive because
+it also unshares mount namespace and mounts resources like
+.B mount
+does.
+.PP
+Following operation modes have medium security implications:
+.TP
+.B makedev
+Create essential device files available for all users:
+\fInull\fR, \fIzero\fR, \fIfull\fR and \fIurandom\fR.
+Using this operation mode, caller user may populate file system with
+these devices.  While \fInull\fR, \fIzero\fR and \fIfull\fR cause no
+harm for OS, pseudousers may abuse \fIurandom\fR to cause host system
+randomness starvation.
+.PP
+Following operation modes have high security implications:
+.TP
+.B maketty
+Create terminal device files: \fItty\fR (current tty device) and
+\fIptmx\fR (PTY master multiplex).  Using this operation mode, caller
+user may populate file system with these devices.  While \fItty\fR causes
+no harm for OS, pseudousers may abuse \fIptmx\fR to exhaust OS pty limit
+and therefore install DoS attack against host system.
+.TP
+.B mount
+Mount appropriate file system according to specified mount point.
+For example, proc and sysfs virtual file systems provide access to various
+system resources which could be abused by pseudousers, devpts virtual
+file system provides access to all pty device files which also could be
+abused by pseudousers if these files have inappropriate permissions.
+.TP
+.B umount
+Umount all file systems previously mounted by
+\*(lq\fBhasher\-priv\fR mount\*(rq.  Unless appropriate
+.I prefix
+config option is set, this command may be abused by calling user to
+unmount essential file systems and therefore install DoS attack against
+host system.
+
+.PP
+All risky operation modes are not enabled by default.  They could be
+explicitly enabled in
+.B hasher\-priv
+configuration.
+.SH ENVIRONMENT
+The following environment variables are processed by
+.BR hasher\-priv:
+.TP
+.B wlimit_time_elapsed
+Define total execution time limit, in seconds.
+If
+.B wlimit_time_elapsed
+config parameter is also set, then minimal value will be used.
+.TP
+.B wlimit_time_idle
+Define idle time limit, in seconds.
+Idle time is a period when child process produces no output.
+If
+.B wlimit_time_idle
+config parameter is also set, then minimal value will be used.
+.TP
+.B wlimit_bytes_written
+Define limit of output generated by child process, in bytes.
+If
+.B wlimit_bytes_written
+config parameter is also set, then minimal value will be used.
+.TP
+.B use_pty
+This boolean specifies whether stdin, stdout and stderr of child process
+will be redirected to controlling pseudoterminal created by
+.BR hasher\-priv.
+By default, stdin remains unchanged unless it references to terminal
+device, and stdout with stderr are redirected to pipe created by
+.BR hasher\-priv.
+.TP
+.B share_ipc
+This boolean specifies whether IPC namespace inside chroot should be shared
+with host IPC namespace.
+By default, IPC namespace inside chroot is isolated from host IPC namespace if
+.BR unshare (CLONE_NEWIPC)
+syscall is supported by kernel.
+.TP
+.B share_mount
+This boolean specifies whether mount namespace inside chroot should be shared
+with host mount namespace.
+By default, mount namespace inside chroot is isolated from host mount namespace if
+.BR unshare (CLONE_NEWNS)
+syscall is supported by kernel.
+.TP
+.B share_network
+This boolean specifies whether network inside chroot should be shared
+with host network.
+By default, network inside chroot is isolated from host network if
+.BR unshare (CLONE_NEWNET)
+syscall is supported by kernel.
+.TP
+.B share_uts
+This boolean specifies whether UTS namespace inside chroot should be shared
+with host UTS namespace.
+By default, UTS namespace inside chroot is isolated from host UTS namespace if
+.BR unshare (CLONE_NEWUTS)
+syscall is supported by kernel.
+.TP
+.B TERM
+This variable will be passed to child process if
+.B use_pty
+is set to true.
+.SH FILES
+.TP
+.I /etc/hasher\-priv/system
+systemwide config file
+.TP
+\fI/etc/hasher\-priv/user.d/\fBUSER\fR
+per-user config files
+.TP
+\fI/etc/hasher\-priv/user.d/\fBUSER\fI:\fBNUMBER\fR
+per-user per-number subconfig files
+.SH AUTHOR
+Written by Dmitry V. Levin <ldv@altlinux.org> et al.
+.SH COPYRIGHT
+Copyright \(co 2003\-2013  Dmitry V. Levin <ldv@altlinux.org>
+.PP
+.br
+This is free software; see the source for copying conditions.
+There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+.SH "SEE ALSO"
+.BR unshare (2),
+.BR hasher\-priv.conf (5),
+.BR hasher (7),
+.BR hasher\-useradd (8).
